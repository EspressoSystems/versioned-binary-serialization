var searchIndex = new Map(JSON.parse('[\
["versioned_binary_serialization",{"doc":"","t":"EECCCCKTTMMMMNFTTTFKFNNNNNNMNNMNNNNNNNNMNNMNNNNNNNNNNNNTTFFNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNTTTTK","n":["BinarySerializer","Serializer","binary_serializer","bincode_serializer","version","versioned","BinarySerializer","MAJOR","MINOR","deserialize","deserialize_no_version","serialize","serialize_no_version","version","BincodeSerializer","MAJOR","MINOR","VERSION_MISMATCH","VersionChecker","VersionedBinarySerializer","VersionedBincodeSerializer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","deserialize_no_version","deserialize_no_version","deserialize_no_version","from","from","from","into","into","into","serialize","serialize","serialize","serialize_no_version","serialize_no_version","serialize_no_version","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","MAJOR","MINOR","StaticVersion","Version","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","fmt","fmt","fmt","from","from","hash","into","into","major","minor","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","MAX_MAJOR","MAX_MINOR","MIN_MAJOR","MIN_MINOR","Versioned"],"q":[[0,"versioned_binary_serialization"],[6,"versioned_binary_serialization::binary_serializer"],[14,"versioned_binary_serialization::bincode_serializer"],[55,"versioned_binary_serialization::version"],[91,"versioned_binary_serialization::versioned"],[96,"anyhow"],[97,"serde::de"],[98,"alloc::vec"],[99,"serde::ser"],[100,"core::marker"],[101,"core::result"],[102,"core::any"],[103,"anyhow"],[104,"core::fmt"],[105,"serde::ser"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Type for protocol version number","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","major version number","minor version number","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,22,22,22,22,22,22,22,0,23,23,24,0,0,0,25,24,26,25,24,26,23,25,26,23,25,26,25,24,26,25,24,26,23,25,26,23,25,26,25,24,26,25,24,26,25,24,26,23,12,12,0,0,8,12,8,12,8,12,8,12,8,8,8,8,8,12,8,12,8,8,12,8,8,8,8,8,12,8,8,12,8,12,8,12,9,9,9,9,0],"f":[0,0,0,0,0,0,0,0,0,[[[2,[1]]],[[3,[-1]]],4],[[[2,[1]]],[[3,[-1]]],4],[-1,[[3,[[5,[1]]]]],[6,7]],[-1,[[3,[[5,[1]]]]],[6,7]],[[],8],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[1]]],[[3,[-1]]],[4,9]],[[[2,[1]]],[[3,[-1]]],4],[[[2,[1]]],[[3,[-1]]],[4,9]],[[[2,[1]]],[[3,[-1]]],[4,9]],[[[2,[1]]],[[3,[-1]]],4],[[[2,[1]]],[[3,[-1]]],[4,9]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[[5,[1]]]]],[6,9,7]],[-1,[[3,[[5,[1]]]]],[6,7]],[-1,[[3,[[5,[1]]]]],[6,9,7]],[-1,[[3,[[5,[1]]]]],[6,9,7]],[-1,[[3,[[5,[1]]]]],[6,7]],[-1,[[3,[[5,[1]]]]],[6,9,7]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[],8],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[12,12],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[[2,[1]]],[[10,[[13,[8,[2,[1]]]],14]]]],[-1,[[10,[8]]],15],[[8,8],16],[[8,17],18],[[8,17],18],[[12,17],18],[-1,-1,[]],[-1,-1,[]],[[8,-1],13,19],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[8,[[5,[1]]]],[[8,-1],10,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,21,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,0,0,0,0],"c":[],"p":[[1,"u8"],[1,"slice"],[8,"Result",96],[10,"Deserialize",97],[5,"Vec",98],[10,"Serialize",99],[10,"Sized",100],[5,"Version",55],[10,"Versioned",91],[6,"Result",101],[5,"TypeId",102],[5,"StaticVersion",55],[1,"tuple"],[5,"Error",96],[10,"Deserializer",97],[1,"bool"],[5,"Formatter",103],[8,"Result",103],[10,"Hasher",104],[10,"Serializer",99],[5,"String",105],[10,"BinarySerializer",6],[10,"VersionedBinarySerializer",14],[5,"VersionChecker",14],[5,"BincodeSerializer",14],[5,"VersionedBincodeSerializer",14]],"b":[[67,"impl-Version"],[68,"impl-Deserialize%3C\'de%3E-for-Version"],[70,"impl-Debug-for-Version"],[71,"impl-Display-for-Version"],[80,"impl-Version"],[81,"impl-Serialize-for-Version"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
