var searchIndex = new Map(JSON.parse('[\
["versioned_binary_serialization",{"doc":"","t":"EECCCCKTTMMMMNFTTTFKFNNNNNNMNNMNNNNNNNNMNNMNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNOONNNNNNNNNNTTTTK","n":["BinarySerializer","Serializer","binary_serializer","bincode_serializer","version","versioned","BinarySerializer","MAJOR","MINOR","deserialize","deserialize_no_version","serialize","serialize_no_version","version","BincodeSerializer","MAJOR","MINOR","VERSION_MISMATCH","VersionChecker","VersionedBinarySerializer","VersionedBincodeSerializer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","deserialize_no_version","deserialize_no_version","deserialize_no_version","from","from","from","into","into","into","serialize","serialize","serialize","serialize_no_version","serialize_no_version","serialize_no_version","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","StaticVersion","Version","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","deserialize","eq","fmt","fmt","from","from","hash","into","into","major","minor","serialize","serialize","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","MAX_MAJOR","MAX_MINOR","MIN_MAJOR","MIN_MINOR","Versioned"],"q":[[0,"versioned_binary_serialization"],[6,"versioned_binary_serialization::binary_serializer"],[14,"versioned_binary_serialization::bincode_serializer"],[55,"versioned_binary_serialization::version"],[85,"versioned_binary_serialization::versioned"],[90,"anyhow"],[91,"serde::de"],[92,"alloc::vec"],[93,"serde::ser"],[94,"core::marker"],[95,"core::result"],[96,"core::any"],[97,"anyhow"],[98,"core::fmt"],[99,"serde::ser"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Type for protocol version number","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","major version number","minor version number","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,21,21,21,21,21,21,21,0,22,22,23,0,0,0,24,23,25,24,23,25,22,24,25,22,24,25,24,23,25,24,23,25,22,24,25,22,24,25,24,23,25,24,23,25,24,23,25,22,0,0,26,8,26,8,8,8,8,8,8,8,8,26,8,8,26,8,8,8,8,8,8,8,26,8,26,8,26,8,9,9,9,9,0],"f":[0,0,0,0,0,0,0,0,0,[[[2,[1]]],[[3,[-1]]],4],[[[2,[1]]],[[3,[-1]]],4],[-1,[[3,[[5,[1]]]]],[6,7]],[-1,[[3,[[5,[1]]]]],[6,7]],[[],8],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[1]]],[[3,[-1]]],[4,9]],[[[2,[1]]],[[3,[-1]]],4],[[[2,[1]]],[[3,[-1]]],[4,9]],[[[2,[1]]],[[3,[-1]]],[4,9]],[[[2,[1]]],[[3,[-1]]],4],[[[2,[1]]],[[3,[-1]]],[4,9]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[[5,[1]]]]],[6,9,7]],[-1,[[3,[[5,[1]]]]],[6,7]],[-1,[[3,[[5,[1]]]]],[6,9,7]],[-1,[[3,[[5,[1]]]]],[6,9,7]],[-1,[[3,[[5,[1]]]]],[6,7]],[-1,[[3,[[5,[1]]]]],[6,9,7]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[],8],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[[-1,-2],12,[],[]],[[[2,[1]]],[[10,[[12,[8,[2,[1]]]],13]]]],[-1,[[10,[8]]],14],[[8,8],15],[[8,16],17],[[8,16],17],[-1,-1,[]],[-1,-1,[]],[[8,-1],12,18],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[8,[[5,[1]]]],[[8,-1],10,19],[-1,-2,[],[]],[-1,20,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,0,0,0,0],"c":[],"p":[[1,"u8"],[1,"slice"],[8,"Result",90],[10,"Deserialize",91],[5,"Vec",92],[10,"Serialize",93],[10,"Sized",94],[5,"Version",55],[10,"Versioned",85],[6,"Result",95],[5,"TypeId",96],[1,"tuple"],[5,"Error",90],[10,"Deserializer",91],[1,"bool"],[5,"Formatter",97],[8,"Result",97],[10,"Hasher",98],[10,"Serializer",93],[5,"String",99],[10,"BinarySerializer",6],[10,"VersionedBinarySerializer",14],[5,"VersionChecker",14],[5,"BincodeSerializer",14],[5,"VersionedBincodeSerializer",14],[5,"StaticVersion",55]],"b":[[63,"impl-Version"],[64,"impl-Deserialize%3C\'de%3E-for-Version"],[66,"impl-Debug-for-Version"],[67,"impl-Display-for-Version"],[75,"impl-Version"],[76,"impl-Serialize-for-Version"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
